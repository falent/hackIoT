"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
class IntentSchema {
    constructor(schemaJSON) {
        this.schemaJSON = schemaJSON;
    }
    static fromFile(file) {
        const data = fs.readFileSync(file);
        const json = JSON.parse(data.toString());
        return IntentSchema.fromJSON(json);
    }
    static fromJSON(schemaJSON) {
        return new IntentSchema(schemaJSON);
    }
    intents() {
        const intentArray = [];
        for (const intentJSON of this.schemaJSON.intents) {
            const intent = new Intent(intentJSON.intent);
            if (intentJSON.slots !== undefined && intentJSON.slots !== null) {
                for (const slotJSON of intentJSON.slots) {
                    intent.addSlot(new IntentSlot(slotJSON.name, slotJSON.type));
                }
            }
            intentArray.push(intent);
        }
        return intentArray;
    }
    intent(intentString) {
        let intent = null;
        for (const o of this.intents()) {
            if (o.name === intentString) {
                intent = o;
                break;
            }
        }
        return intent;
    }
    hasIntent(intentString) {
        return this.intent(intentString) !== null;
    }
}
exports.IntentSchema = IntentSchema;
class Intent {
    constructor(name) {
        this.name = name;
        this.builtin = false;
        this.slots = null;
        if (this.name.indexOf("AMAZON") !== -1) {
            this.builtin = true;
        }
    }
    addSlot(slot) {
        if (this.slots === null) {
            this.slots = [];
        }
        this.slots.push(slot);
    }
    slotForName(name) {
        for (const slot of this.slots) {
            if (name.toLowerCase() === slot.name.toLowerCase()) {
                return slot;
            }
        }
        return undefined;
    }
}
exports.Intent = Intent;
class IntentSlot {
    constructor(name, type) {
        this.name = name;
        this.type = type;
    }
}
exports.IntentSlot = IntentSlot;
//# sourceMappingURL=IntentSchema.js.map